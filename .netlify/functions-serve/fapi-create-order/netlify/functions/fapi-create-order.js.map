{
  "version": 3,
  "sources": ["../../../../OneDrive/Dokumenty/GitHub/podnikatelska-ctvrtka/netlify/functions/fapi-create-order.js"],
  "sourceRoot": "C:/Users/p3pul/AppData/Local/Temp/tmp-23176-m9MrPhYqmshG",
  "sourcesContent": ["// FAPI Create Order Function\n// Creates a contact and order in FAPI, returns payment URL\n\nexports.handler = async (event, context) => {\n  // Only allow POST\n  if (event.httpMethod !== 'POST') {\n    return {\n      statusCode: 405,\n      body: JSON.stringify({ error: 'Method not allowed' }),\n    };\n  }\n\n  try {\n    const { firstName, lastName, email, phone, productId, productName, price } = JSON.parse(event.body);\n\n    // Validate required fields\n    if (!firstName || !lastName || !email || !productId) {\n      return {\n        statusCode: 400,\n        body: JSON.stringify({ error: 'Missing required fields' }),\n      };\n    }\n\n    // FAPI credentials from environment\n    const FAPI_API_KEY = process.env.FAPI_API_KEY;\n    const FAPI_ACCOUNT_ID = process.env.FAPI_ACCOUNT_ID;\n\n    if (!FAPI_API_KEY || !FAPI_ACCOUNT_ID) {\n      console.error('Missing FAPI credentials');\n      return {\n        statusCode: 500,\n        body: JSON.stringify({ error: 'Server configuration error' }),\n      };\n    }\n\n    // FAPI API endpoint\n    const FAPI_API_URL = `https://app.fapi.cz/api/v1/accounts/${FAPI_ACCOUNT_ID}`;\n\n    // 1. Create/Update Contact in FAPI\n    const contactData = {\n      email: email,\n      first_name: firstName,\n      last_name: lastName,\n      phone: phone || '',\n    };\n\n    const contactResponse = await fetch(`${FAPI_API_URL}/contacts`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${FAPI_API_KEY}`,\n      },\n      body: JSON.stringify(contactData),\n    });\n\n    if (!contactResponse.ok) {\n      const errorText = await contactResponse.text();\n      console.error('FAPI contact creation failed:', errorText);\n      throw new Error('Failed to create contact');\n    }\n\n    const contact = await contactResponse.json();\n\n    // 2. Create Order in FAPI\n    const orderData = {\n      contact_id: contact.id,\n      product_id: parseInt(productId),\n      status: 'pending', // Order status before payment\n      amount: price,\n      currency: 'CZK',\n      // Add UTM parameters if available\n      utm_source: event.headers['x-utm-source'] || '',\n      utm_medium: event.headers['x-utm-medium'] || '',\n      utm_campaign: event.headers['x-utm-campaign'] || '',\n    };\n\n    const orderResponse = await fetch(`${FAPI_API_URL}/orders`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${FAPI_API_KEY}`,\n      },\n      body: JSON.stringify(orderData),\n    });\n\n    if (!orderResponse.ok) {\n      const errorText = await orderResponse.text();\n      console.error('FAPI order creation failed:', errorText);\n      throw new Error('Failed to create order');\n    }\n\n    const order = await orderResponse.json();\n\n    // 3. Get Payment URL from FAPI\n    // FAPI automatically generates payment URL for the order\n    const paymentUrl = order.payment_url || `https://app.fapi.cz/payment/${order.id}`;\n\n    // Return success with payment URL\n    return {\n      statusCode: 200,\n      body: JSON.stringify({\n        success: true,\n        orderId: order.id,\n        paymentUrl: paymentUrl,\n        message: 'Order created successfully',\n      }),\n    };\n\n  } catch (error) {\n    console.error('FAPI order error:', error);\n    return {\n      statusCode: 500,\n      body: JSON.stringify({\n        error: 'Failed to create order',\n        message: error.message,\n      }),\n    };\n  }\n};\n"],
  "mappings": ";;;AAGA,QAAQ,UAAU,OAAO,OAAO,YAAY;AAE1C,MAAI,MAAM,eAAe,QAAQ;AAC/B,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,MAAM,KAAK,UAAU,EAAE,OAAO,qBAAqB,CAAC;AAAA,IACtD;AAAA,EACF;AAEA,MAAI;AACF,UAAM,EAAE,WAAW,UAAU,OAAO,OAAO,WAAW,aAAa,MAAM,IAAI,KAAK,MAAM,MAAM,IAAI;AAGlG,QAAI,CAAC,aAAa,CAAC,YAAY,CAAC,SAAS,CAAC,WAAW;AACnD,aAAO;AAAA,QACL,YAAY;AAAA,QACZ,MAAM,KAAK,UAAU,EAAE,OAAO,0BAA0B,CAAC;AAAA,MAC3D;AAAA,IACF;AAGA,UAAM,eAAe,QAAQ,IAAI;AACjC,UAAM,kBAAkB,QAAQ,IAAI;AAEpC,QAAI,CAAC,gBAAgB,CAAC,iBAAiB;AACrC,cAAQ,MAAM,0BAA0B;AACxC,aAAO;AAAA,QACL,YAAY;AAAA,QACZ,MAAM,KAAK,UAAU,EAAE,OAAO,6BAA6B,CAAC;AAAA,MAC9D;AAAA,IACF;AAGA,UAAM,eAAe,uCAAuC,eAAe;AAG3E,UAAM,cAAc;AAAA,MAClB;AAAA,MACA,YAAY;AAAA,MACZ,WAAW;AAAA,MACX,OAAO,SAAS;AAAA,IAClB;AAEA,UAAM,kBAAkB,MAAM,MAAM,GAAG,YAAY,aAAa;AAAA,MAC9D,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,gBAAgB;AAAA,QAChB,iBAAiB,UAAU,YAAY;AAAA,MACzC;AAAA,MACA,MAAM,KAAK,UAAU,WAAW;AAAA,IAClC,CAAC;AAED,QAAI,CAAC,gBAAgB,IAAI;AACvB,YAAM,YAAY,MAAM,gBAAgB,KAAK;AAC7C,cAAQ,MAAM,iCAAiC,SAAS;AACxD,YAAM,IAAI,MAAM,0BAA0B;AAAA,IAC5C;AAEA,UAAM,UAAU,MAAM,gBAAgB,KAAK;AAG3C,UAAM,YAAY;AAAA,MAChB,YAAY,QAAQ;AAAA,MACpB,YAAY,SAAS,SAAS;AAAA,MAC9B,QAAQ;AAAA;AAAA,MACR,QAAQ;AAAA,MACR,UAAU;AAAA;AAAA,MAEV,YAAY,MAAM,QAAQ,cAAc,KAAK;AAAA,MAC7C,YAAY,MAAM,QAAQ,cAAc,KAAK;AAAA,MAC7C,cAAc,MAAM,QAAQ,gBAAgB,KAAK;AAAA,IACnD;AAEA,UAAM,gBAAgB,MAAM,MAAM,GAAG,YAAY,WAAW;AAAA,MAC1D,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,gBAAgB;AAAA,QAChB,iBAAiB,UAAU,YAAY;AAAA,MACzC;AAAA,MACA,MAAM,KAAK,UAAU,SAAS;AAAA,IAChC,CAAC;AAED,QAAI,CAAC,cAAc,IAAI;AACrB,YAAM,YAAY,MAAM,cAAc,KAAK;AAC3C,cAAQ,MAAM,+BAA+B,SAAS;AACtD,YAAM,IAAI,MAAM,wBAAwB;AAAA,IAC1C;AAEA,UAAM,QAAQ,MAAM,cAAc,KAAK;AAIvC,UAAM,aAAa,MAAM,eAAe,+BAA+B,MAAM,EAAE;AAG/E,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,MAAM,KAAK,UAAU;AAAA,QACnB,SAAS;AAAA,QACT,SAAS,MAAM;AAAA,QACf;AAAA,QACA,SAAS;AAAA,MACX,CAAC;AAAA,IACH;AAAA,EAEF,SAAS,OAAO;AACd,YAAQ,MAAM,qBAAqB,KAAK;AACxC,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,MAAM,KAAK,UAAU;AAAA,QACnB,OAAO;AAAA,QACP,SAAS,MAAM;AAAA,MACjB,CAAC;AAAA,IACH;AAAA,EACF;AACF;",
  "names": []
}
