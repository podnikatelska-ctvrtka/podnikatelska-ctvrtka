-- ‚úÖ FIN√ÅLN√ç WORKING SQL - Vytvo≈ôen√≠ test usera
-- Spus≈• v Supabase SQL Editor

-- KROK 1: Zkontroluj jestli user u≈æ existuje
SELECT 
  id as "üìã UUID (zkop√≠ruj do devToken.ts)",
  email,
  email_confirmed_at as "‚úÖ Email confirmed?",
  created_at
FROM auth.users 
WHERE email = 'test@podnikatelskacitvrtka.cz';

-- ‚ö†Ô∏è POKUD V√ù≈†E VID√ç≈† ≈ò√ÅDEK ‚Üí User ji≈æ existuje!
--    Zkop√≠ruj UUID do devToken.ts a jsi hotov√Ω!
-- ‚ö†Ô∏è POKUD NIC ‚Üí Pokraƒçuj n√≠≈æe...

-- ============================================
-- KROK 2: Vytvo≈ô nov√©ho usera (POUZE pokud neexistuje!)
-- ============================================

DO $$ 
DECLARE
  new_user_id UUID;
BEGIN
  -- Zkus naj√≠t existuj√≠c√≠ho usera
  SELECT id INTO new_user_id
  FROM auth.users
  WHERE email = 'test@podnikatelskacitvrtka.cz';
  
  -- Pokud neexistuje, vytvo≈ô ho
  IF new_user_id IS NULL THEN
    INSERT INTO auth.users (
      instance_id,
      id,
      aud,
      role,
      email,
      encrypted_password,
      email_confirmed_at,
      raw_app_meta_data,
      raw_user_meta_data,
      created_at,
      updated_at,
      confirmation_token,
      email_change,
      email_change_token_new,
      recovery_token
    ) VALUES (
      '00000000-0000-0000-0000-000000000000',
      gen_random_uuid(),
      'authenticated',
      'authenticated',
      'test@podnikatelskacitvrtka.cz',
      crypt('TestHeslo123!', gen_salt('bf')),
      now(), -- ‚úÖ Email confirmed okam≈æitƒõ
      '{"provider":"email","providers":["email"]}'::jsonb,
      '{}'::jsonb,
      now(),
      now(),
      '',
      '',
      '',
      ''
    )
    RETURNING id INTO new_user_id;
    
    RAISE NOTICE '‚úÖ Test user vytvo≈ôen s UUID: %', new_user_id;
  ELSE
    RAISE NOTICE '‚ÑπÔ∏è Test user ji≈æ existuje s UUID: %', new_user_id;
    
    -- Potvrƒè email pokud je≈°tƒõ nen√≠
    UPDATE auth.users 
    SET email_confirmed_at = now()
    WHERE id = new_user_id AND email_confirmed_at IS NULL;
  END IF;
END $$;

-- ============================================
-- KROK 3: Zobraz UUID pro devToken.ts
-- ============================================

SELECT 
  id as "üìã ZKOP√çRUJ TENTO UUID DO devToken.ts",
  email,
  email_confirmed_at as "‚úÖ Email confirmed?",
  created_at
FROM auth.users 
WHERE email = 'test@podnikatelskacitvrtka.cz';

-- ============================================
-- ‚úÖ HOTOVO!
-- ============================================
-- Credentials:
--   Email: test@podnikatelskacitvrtka.cz
--   Heslo: TestHeslo123!
-- 
-- UUID: Zkop√≠ruj z v√Ωsledku v√Ω≈°e do /lib/devToken.ts
-- ============================================
