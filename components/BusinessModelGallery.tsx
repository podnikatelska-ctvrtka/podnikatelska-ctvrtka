import { useState, useEffect } from "react";
import { Info, CheckCircle2 } from "lucide-react";
import { Button } from "./ui/button";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "./ui/tabs";
import { ReadOnlyBusinessModelCanvas } from "./ReadOnlyBusinessModelCanvas";

interface Props {
  onComplete?: () => void;
  onNavigateNext?: () => void;
  isLessonCompleted?: boolean;
}

// Typ pro business model data
interface BusinessModel {
  id: string;
  name: string;
  version: string;
  category: string;
  emoji: string;
  description: string;
  segments: Array<{ text: string; color: string }>;
  value: Array<{ text: string; color: string; price?: string }>;
  channels: Array<{ text: string; color: string }>;
  relationships: Array<{ text: string; color: string }>;
  revenue: Array<{ text: string; color: string; percentage?: string }>;
  activities: Array<{ text: string; color: string }>;
  resources: Array<{ text: string; color: string }>;
  partnerships: Array<{ text: string; color: string }>;
  costs: Array<{ text: string; percentage?: string }>;
  insights: {
    crossSell: string;
    revenueBreakdown: string;
    keySuccess: string;
    whyItWorks: string;
  };
}

const BUSINESS_MODELS: BusinessModel[] = [
  // ‚òï KAV√ÅRNA - VERZE A: Coworkingov√Ω model
  {
    id: 'cafe-a',
    name: 'Kav√°rna',
    version: 'A - Coworkingov√Ω prostor',
    category: 'Kav√°rny',
    emoji: '‚òï',
    description: 'Kav√°rna jako coworking prostor pro freelancery',
    segments: [
      { text: 'Freelance≈ôi (coworking)', color: 'blue' },
      { text: 'Studenti (p≈ô√≠prava)', color: 'green' }
    ],
    value: [
      { text: 'Coworking cel√Ω den + WiFi', color: 'blue' },
      { text: 'Tich√° m√≠sta pro uƒçen√≠', color: 'green' }
    ],
    channels: [
      { text: 'Instagram (coworking fotky)', color: 'blue' },
      { text: 'Google "kav√°rna WiFi"', color: 'blue' },
      { text: 'Univerzitn√≠ skupiny', color: 'green' }
    ],
    relationships: [
      { text: 'Vƒõrnostn√≠ karty', color: 'blue' },
      { text: 'Komunitn√≠ akce', color: 'blue' }
    ],
    revenue: [
      { text: 'K√°va a n√°poje', color: 'global', percentage: '60%' },
      { text: 'J√≠dlo', color: 'global', percentage: '30%' },
      { text: 'Dezerty', color: 'global', percentage: '10%' }
    ],
    activities: [
      { text: 'P≈ô√≠prava k√°vy', color: 'global' },
      { text: '√ödr≈æba coworkingu', color: 'blue' },
      { text: 'Marketing (Instagram)', color: 'global' }
    ],
    resources: [
      { text: 'Barist√© (2)', color: 'global' },
      { text: 'Espresso stroj', color: 'global' },
      { text: 'Velk√Ω prostor se stoly', color: 'blue' },
      { text: 'Rychl√© WiFi', color: 'blue' }
    ],
    partnerships: [
      { text: 'Dodavatel specialty k√°vy', color: 'global' },
      { text: 'Lok√°ln√≠ pek√°rna', color: 'global' }
    ],
    costs: [
      { text: 'K√°va a suroviny', percentage: '30%' },
      { text: 'N√°jem velk√©ho prostoru', percentage: '40%' },
      { text: 'Mzdy', percentage: '30%' }
    ],
    insights: {
      crossSell: 'üç∞ Dezerty k rann√≠ k√°vƒõ ‚Üí 10% tr≈æeb (mar≈æe 70%!) - kdo sed√≠ 4 hodiny, koup√≠ si 2-3 dezerty',
      revenueBreakdown: 'K√°va 60% + J√≠dlo 30% + Dezerty 10% = stabiln√≠ p≈ô√≠jem po cel√Ω den',
      keySuccess: 'Velk√Ω prostor + WiFi = freelance≈ôi z≈Øst√°vaj√≠ 4-6 hodin (pr≈Ømƒõr 3 k√°vy!)',
      whyItWorks: 'üí° Freelance≈ôi pot≈ôebuj√≠ workspace, ale coworking je drah√Ω (3.000-8.000 Kƒç/mƒõs√≠c) ‚Üí kav√°rna je levnƒõj≈°√≠ ≈ôe≈°en√≠ (k√°va za 60 Kƒç + cel√Ω den internet zdarma) + soci√°ln√≠ prost≈ôed√≠ zdarma'
    }
  },
  
  // ‚òï KAV√ÅRNA - VERZE B: Rychl√° kav√°rna
  {
    id: 'cafe-b',
    name: 'Kav√°rna',
    version: 'B - Rychl√° kav√°rna',
    category: 'Kav√°rny',
    emoji: '‚òï',
    description: 'Rychl√° kav√°rna na ru≈°n√© k≈ôi≈æovatce (to-go model)',
    segments: [
      { text: 'Rann√≠ doj√≠≈ædƒõj√≠c√≠', color: 'blue' },
      { text: 'Obƒõdov√° pauza (office)', color: 'green' }
    ],
    value: [
      { text: 'K√°va za 2 min (r√°no)', color: 'blue' },
      { text: 'Express obƒõdy (lunch)', color: 'green' }
    ],
    channels: [
      { text: 'Um√≠stƒõn√≠ na k≈ôi≈æovatce', color: 'blue' },
      { text: 'Instagram (rychl√© story)', color: 'blue' },
      { text: 'Google Maps "bl√≠zko"', color: 'green' }
    ],
    relationships: [
      { text: 'Vƒõrnostn√≠ karta', color: 'blue' },
      { text: 'Mobiln√≠ objedn√°vka', color: 'blue' }
    ],
    revenue: [
      { text: 'K√°va to-go (r√°no)', color: 'blue', percentage: '50%' },
      { text: 'Express obƒõdy', color: 'green', percentage: '40%' },
      { text: 'Dezerty a bagety', color: 'global', percentage: '10%' }
    ],
    activities: [
      { text: 'P≈ô√≠prava k√°vy', color: 'global' },
      { text: 'Prep work', color: 'green' },
      { text: 'Z√°sobov√°n√≠', color: 'global' }
    ],
    resources: [
      { text: 'Barist√© (3)', color: 'global' },
      { text: 'Espresso stroj', color: 'blue' },
      { text: 'Mal√Ω prostor', color: 'global' }
    ],
    partnerships: [
      { text: 'Dodavatel k√°vy (velkoobchod)', color: 'global' },
      { text: 'Catering firma (obƒõdy)', color: 'green' }
    ],
    costs: [
      { text: 'Suroviny', percentage: '35%' },
      { text: 'N√°jem (pr√©miov√° lokace!)', percentage: '35%' },
      { text: 'Mzdy (3 smƒõny)', percentage: '30%' }
    ],
    insights: {
      crossSell: 'ü•ñ Bagety a dezerty k rann√≠ k√°vƒõ ‚Üí 10% tr≈æeb (vysok√° mar≈æe 65%) - "d√°te si k tomu nƒõco?" p≈ôi platbƒõ',
      revenueBreakdown: 'R√°no k√°va 50% + Obƒõd 40% + Cross-sell 10% = 2 peak times dennƒõ',
      keySuccess: 'Lokace na k≈ôi≈æovatce = dennƒõ 500+ lid√≠ projde kolem',
      whyItWorks: '‚ö° Rychlost + n√°vyk = loajalita. Lidi si vytvo≈ô√≠ rann√≠ ritu√°l (stejn√° kav√°rna, stejn√Ω ƒças) ‚Üí kdy≈æ v√≠≈° ≈æe bude≈° hotov√Ω za 2 minuty, vrac√≠≈° se ka≈æd√© r√°no. Premium lokace = plat√≠ se v√≠c, ale obrat je 3x vy≈°≈°√≠'
    }
  },

  // üçï PIZZERIE - VERZE A: S rozvozem
  {
    id: 'pizza-a',
    name: 'Pizzerie',
    version: 'A - S rozvozem',
    category: 'Restaurace',
    emoji: 'üçï',
    description: 'Pizzerie s rozvozem a osobn√≠m odbƒõrem',
    segments: [
      { text: 'Rodiny s dƒõtmi (veƒçe≈ôe)', color: 'blue' },
      { text: 'Studenti v kolej√≠ch', color: 'green' }
    ],
    value: [
      { text: 'Rozvoz do 30 min', color: 'blue' },
      { text: '20% sleva p≈ôi odbƒõru', color: 'global' }
    ],
    channels: [
      { text: 'Facebook (rodiny)', color: 'blue' },
      { text: 'Instagram (studenti)', color: 'green' },
      { text: 'Vlastn√≠ web + mobil app', color: 'global' }
    ],
    relationships: [
      { text: 'Vƒõrnostn√≠ program', color: 'blue' },
      { text: 'SMS notifikace', color: 'global' }
    ],
    revenue: [
      { text: 'Pizza (70% tr≈æeb)', color: 'global', percentage: '70%' },
      { text: 'N√°poje', color: 'global', percentage: '20%' },
      { text: 'P≈ô√≠lohy (hranolky)', color: 'global', percentage: '10%' }
    ],
    activities: [
      { text: 'P≈ô√≠prava pizzy', color: 'global' },
      { text: 'Rozvoz', color: 'global' },
      { text: 'Marketing (social media)', color: 'blue' }
    ],
    resources: [
      { text: 'Pizza pec', color: 'global' },
      { text: 'Kucha≈ôi (3)', color: 'global' },
      { text: '≈òidiƒçi (2 auta)', color: 'global' }
    ],
    partnerships: [
      { text: 'Dodavatel surovin', color: 'global' },
      { text: 'Damejidlo.cz', color: 'global' }
    ],
    costs: [
      { text: 'Suroviny', percentage: '30%' },
      { text: 'Mzdy (kucha≈ôi + ≈ôidiƒçi)', percentage: '40%' },
      { text: 'N√°jem + energie', percentage: '30%' }
    ],
    insights: {
      crossSell: 'üí∞ 20% sleva na odbƒõr ‚Üí 40% z√°kazn√≠k≈Ø si vybere odbƒõr = √∫spora n√°klad≈Ø na rozvoz (≈ôidiƒç + benz√≠n + doba) = mar≈æe +15%',
      revenueBreakdown: 'Pizza 70% + N√°poje 20% (vysok√° mar≈æe!) + P≈ô√≠lohy 10%',
      keySuccess: 'Rodiny objedn√°vaj√≠ veƒçer (18-21h) = peak time s vysok√Ωmi objedn√°vkami',
      whyItWorks: 'üéØ Jeden produkt, dva segmenty s r≈Øzn√Ωmi prioritami: (1) Rodiƒçe ‚Üí pohodl√≠ veƒçer (nechce se jim va≈ôit po pr√°ci), plat√≠ plnou cenu za rozvoz. (2) Studenti ‚Üí cena (chtƒõj√≠ u≈°et≈ôit), p≈ôijdou si vyzvednout za slevu. Obƒõ skupiny chtƒõj√≠ pizzu, jen z jin√Ωch d≈Øvod≈Ø'
    }
  },

  // üçï PIZZERIE - VERZE B: Pr√©miov√°
  {
    id: 'pizza-b',
    name: 'Pizzerie',
    version: 'B - Pr√©miov√°',
    category: 'Restaurace',
    emoji: 'üçï',
    description: '≈òemesln√° pizzerie s unik√°tn√≠mi ingrediencemi',
    segments: [
      { text: 'Foodie (IG influence≈ôi)', color: 'blue' },
      { text: 'Mlad√≠ profesion√°lov√©', color: 'green' }
    ],
    value: [
      { text: 'Limitovan√© edice (mƒõs√≠ƒçn√≠)', color: 'blue' },
      { text: 'Craft pivo pairing', color: 'green' }
    ],
    channels: [
      { text: 'Instagram (fotky j√≠dla)', color: 'blue' },
      { text: 'Food blogge≈ôi', color: 'blue' },
      { text: 'Rezervace online', color: 'green' }
    ],
    relationships: [
      { text: 'Exclusive previews (IG)', color: 'blue' },
      { text: 'ƒålenstv√≠ (priority booking)', color: 'green' }
    ],
    revenue: [
      { text: 'Pr√©miov√© pizzy', color: 'global', percentage: '60%' },
      { text: 'Craft pivo', color: 'green', percentage: '25%' },
      { text: 'Dezerty', color: 'global', percentage: '15%' }
    ],
    activities: [
      { text: 'V√Ωvoj nov√Ωch receptur', color: 'blue' },
      { text: 'Spolupr√°ce s farmami', color: 'global' },
      { text: 'Marketing (IG content)', color: 'blue' }
    ],
    resources: [
      { text: 'Import pizza pec (It√°lie)', color: 'global' },
      { text: 'Pizzaiolo (certifik√°t)', color: 'global' },
      { text: 'Pr√©miov√Ω prostor', color: 'green' }
    ],
    partnerships: [
      { text: 'Lok√°ln√≠ farmy (bio)', color: 'global' },
      { text: 'Craft pivovary', color: 'green' },
      { text: 'Food influence≈ôi', color: 'blue' }
    ],
    costs: [
      { text: 'Pr√©miov√© ingredience', percentage: '40%' },
      { text: 'Mzdy (vysok√° kvalifikace)', percentage: '35%' },
      { text: 'N√°jem (centrum)', percentage: '25%' }
    ],
    insights: {
      crossSell: 'üç∫ Craft pivo pairing (doporuƒçen√≠ konkr√©tn√≠ho piva ke ka≈æd√© pizzƒõ, jako v√≠no k j√≠dlu) ‚Üí 25% tr≈æeb (mar≈æe 70%!) - z√°kazn√≠k si koup√≠ "z√°≈æitek", ne jen pivo',
      revenueBreakdown: 'Pizza 60% + Pivo 25% + Dezerty 15% = vysok√© AVG check',
      keySuccess: '50% vy≈°≈°√≠ cena pizzy (350 Kƒç vs 230 Kƒç standard) = mar≈æe 65%',
      whyItWorks: 'üì∏ Instagram je tv≈Øj hlavn√≠ prodejce: Fotogenick√° j√≠dla + pr√©miov√Ω prostor = foodie to sd√≠lej√≠ zadarmo (vir√°ln√≠ marketing) ‚Üí p≈ôiv√°d√≠ nov√© z√°kazn√≠ky bez placen√© reklamy. Foodie segment m√° pen√≠ze a ne≈ôe≈°√≠ cenu, kdy≈æ je to "unik√°tn√≠ z√°≈æitek"'
    }
  },

  // üèãÔ∏è FITNESS - VERZE A: Osobn√≠ tr√©ninky
  {
    id: 'fitness-a',
    name: 'Fitness',
    version: 'A - Osobn√≠ tr√©ninky',
    category: 'Fitness',
    emoji: 'üèãÔ∏è',
    description: 'Boutique studio s osobn√≠mi tren√©ry',
    segments: [
      { text: 'Profesion√°lov√© 35-50 let', color: 'blue' },
      { text: 'Post-rehab klienti', color: 'green' }
    ],
    value: [
      { text: 'Osobn√≠ tr√©nink 1-na-1', color: 'blue' },
      { text: 'V√Ω≈æivov√Ω pl√°n', color: 'blue' },
      { text: 'Rehabilitaƒçn√≠ p√©ƒçe', color: 'green' }
    ],
    channels: [
      { text: 'LinkedIn (profesion√°lov√©)', color: 'blue' },
      { text: 'Doporuƒçen√≠ od l√©ka≈ô≈Ø', color: 'green' },
      { text: 'Google "osobn√≠ tren√©r"', color: 'blue' }
    ],
    relationships: [
      { text: 'Osobn√≠ p≈ô√≠stup (WhatsApp)', color: 'blue' },
      { text: 'Mƒõs√≠ƒçn√≠ check-ins', color: 'blue' }
    ],
    revenue: [
      { text: 'Osobn√≠ tr√©ninky (50%)', color: 'blue', percentage: '50%' },
      { text: 'Mƒõs√≠ƒçn√≠ ƒçlenstv√≠', color: 'global', percentage: '30%' },
      { text: 'Suplementy', color: 'global', percentage: '20%' }
    ],
    activities: [
      { text: 'Osobn√≠ tr√©ninky', color: 'blue' },
      { text: 'V√Ω≈æiva konzultace', color: 'global' }
    ],
    resources: [
      { text: 'Certifikovan√≠ tren√©≈ôi (5)', color: 'blue' },
      { text: 'Premium vybaven√≠', color: 'global' },
      { text: 'Mal√Ω prostor (max 20 lid√≠)', color: 'global' }
    ],
    partnerships: [
      { text: 'L√©ka≈ôi (doporuƒçen√≠)', color: 'green' },
      { text: 'Dodavatel suplement≈Ø', color: 'global' }
    ],
    costs: [
      { text: 'Mzdy tren√©r≈Ø (vysok√©!)', percentage: '50%' },
      { text: 'N√°jem premium lokace', percentage: '30%' },
      { text: 'Vybaven√≠', percentage: '20%' }
    ],
    insights: {
      crossSell: 'üíä Suplementy po tr√©ninku ‚Üí 20% tr≈æeb (mar≈æe 60%!) - tren√©r ti p≈ô√≠mo doporuƒç√≠ co pot≈ôebuje≈° = osobn√≠ p≈ô√≠stup zvy≈°uje prodeje',
      revenueBreakdown: 'PT 50% + ƒålenstv√≠ 30% + Suplementy 20% = vysok√© p≈ô√≠jmy na osobu',
      keySuccess: 'Osobn√≠ tren√©≈ôi = retention 85% (pr≈Ømƒõr industry je 40%)',
      whyItWorks: '‚è∞ Profesion√°lov√© 35-50 let maj√≠ pen√≠ze, ale NE ƒças: (1) Nemohou si dovolit zranƒõn√≠ (pr√°ce = priorita) ‚Üí plat√≠ za bezpeƒçn√Ω tr√©nink pod dohledem. (2) Nechtƒõj√≠ ztr√°cet ƒças hled√°n√≠m cviƒçen√≠ online ‚Üí plat√≠ za hotov√Ω pl√°n "na m√≠ru". ƒåas > pen√≠ze pro tento segment'
    }
  },

  // üèãÔ∏è FITNESS - VERZE B: Skupinov√© lekce
  {
    id: 'fitness-b',
    name: 'Fitness',
    version: 'B - Skupinov√© lekce',
    category: 'Fitness',
    emoji: 'üèãÔ∏è',
    description: 'Velk√© studio se skupinov√Ωmi lekcemi',
    segments: [
      { text: 'Mlad√≠ lid√© 20-35 let', color: 'blue' },
      { text: '≈Ωeny (r√°no/odpoledne)', color: 'green' }
    ],
    value: [
      { text: 'Skupinov√© lekce', color: 'blue' },
      { text: 'Rann√≠ j√≥ga (≈æeny)', color: 'green' }
    ],
    channels: [
      { text: 'Instagram (video z lekc√≠)', color: 'blue' },
      { text: 'TikTok challenges', color: 'blue' },
      { text: 'Facebook maminky skupiny', color: 'green' }
    ],
    relationships: [
      { text: 'Community vibe', color: 'blue' },
      { text: 'Messenger booking', color: 'blue' }
    ],
    revenue: [
      { text: 'Mƒõs√≠ƒçn√≠ ƒçlenstv√≠', color: 'global', percentage: '70%' },
      { text: 'Drop-in lekce', color: 'blue', percentage: '20%' },
      { text: 'Merch a ≈°ejkry', color: 'global', percentage: '10%' }
    ],
    activities: [
      { text: 'Skupinov√© lekce', color: 'global' },
      { text: 'Marketing (social media)', color: 'blue' },
      { text: 'Komunitn√≠ akce', color: 'global' }
    ],
    resources: [
      { text: 'Instrukto≈ôi (3)', color: 'global' },
      { text: 'Velk√Ω prostor (50+ lid√≠)', color: 'global' },
      { text: 'Hudebn√≠ syst√©m', color: 'global' }
    ],
    partnerships: [
      { text: 'Fitness influence≈ôi', color: 'blue' },
      { text: 'Dodavatel merch', color: 'global' }
    ],
    costs: [
      { text: 'Mzdy (instrukto≈ôi)', percentage: '40%' },
      { text: 'N√°jem velk√©ho prostoru', percentage: '40%' },
      { text: 'Marketing', percentage: '20%' }
    ],
    insights: {
      crossSell: 'üëï Merch a ≈°ejkry ‚Üí 10% tr≈æeb (mar≈æe 70%) - komunita nos√≠ tvoje logo = branding zdarma + pocit p≈ô√≠slu≈°nosti',
      revenueBreakdown: 'ƒålenstv√≠ 70% (stabiln√≠!) + Drop-in 20% + Merch 10%',
      keySuccess: 'Community = retention 70% (lid√© p≈ôijdou kv≈Øli p≈ô√°tel≈Øm)',
      whyItWorks: 'ü§ù Mlad√≠ lid√© 20-35 let chtƒõj√≠ soci√°ln√≠ z√°≈æitek, ne jen cviƒçen√≠: P≈ôijdou na lekci, poznaj√≠ k√°mo≈°e, vrac√≠ se kv≈Øli p≈ô√°tel≈Øm (ne kv≈Øli fitness!). Skupinov√© lekce = z√°bava + motivace + community. Kdy≈æ m√° nƒõkdo partu ve fitku, neodch√°z√≠ ‚Üí retention 70%'
    }
  }
];

const CATEGORIES = [
  { id: 'Kav√°rny', name: 'Kav√°rny', emoji: '‚òï' },
  { id: 'Restaurace', name: 'Pizzerie', emoji: 'üçï' },
  { id: 'Fitness', name: 'Fitness', emoji: 'üèãÔ∏è' }
];

export function BusinessModelGallery({ onComplete, onNavigateNext, isLessonCompleted = false }: Props) {
  // üì± LAYOUT DETECTION - Pou≈æ√≠v√°me POUZE ≈°√≠≈ôku okna (ne touch detection!)
  const [isMobile, setIsMobile] = useState(typeof window !== 'undefined' && window.innerWidth < 768);
  const [selectedCategory, setSelectedCategory] = useState('Kav√°rny');
  const [selectedVersion, setSelectedVersion] = useState('a');
  const [showInsights, setShowInsights] = useState(false);
  const [isCompleted, setIsCompleted] = useState(false);

  // Listen for window resize to update isMobile
  useEffect(() => {
    const handleResize = () => {
      setIsMobile(window.innerWidth < 768);
    };
    
    window.addEventListener('resize', handleResize);
    return () => window.removeEventListener('resize', handleResize);
  }, []);

  // Filter models by category
  const filteredModels = BUSINESS_MODELS.filter(m => m.category === selectedCategory);
  
  // Get current model
  const currentModel = filteredModels.find(m => m.id.endsWith(`-${selectedVersion}`));

  const handleCategoryChange = (categoryId: string) => {
    setSelectedCategory(categoryId);
    setSelectedVersion('a');
    setShowInsights(false);
  };

  const handleVersionChange = (version: string) => {
    setSelectedVersion(version);
    setShowInsights(false);
  };

  if (!currentModel) return null;

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="bg-gradient-to-r from-indigo-500 to-purple-600 text-white p-6 rounded-xl">
        <h3 className="text-2xl font-bold mb-2">üí° Galerie podnikatelsk√Ωch model≈Ø</h3>
        <p className="text-purple-100">
          Porovnejte r≈Øzn√© strategie ve stejn√©m odvƒõtv√≠ - ka≈æd√Ω model funguje jinak!
        </p>
      </div>

      {/* Category filters */}
      <div className="flex gap-3 justify-center flex-wrap">
        {CATEGORIES.map((cat) => (
          <Button
            key={cat.id}
            onClick={() => handleCategoryChange(cat.id)}
            variant={selectedCategory === cat.id ? 'default' : 'outline'}
            size="lg"
            className="gap-2"
          >
            <span className="text-2xl">{cat.emoji}</span>
            <span>{cat.name}</span>
          </Button>
        ))}
      </div>

      {/* üì± MOBILE: TABS pro p≈ôep√≠n√°n√≠ A/B verz√≠ */}
      {isMobile && (
        <div className="bg-gradient-to-r from-blue-50 to-indigo-50 border-2 border-blue-200 rounded-xl p-4">
          <h4 className="text-sm font-bold text-blue-900 mb-3 text-center">
            üìä Porovnejte r≈Øzn√© strategie:
          </h4>
          <Tabs value={selectedVersion} onValueChange={handleVersionChange} className="w-full">
            <TabsList className="grid w-full grid-cols-2 bg-white border-2 border-blue-300 p-1 rounded-lg shadow-sm">
              <TabsTrigger 
                value="a" 
                className="gap-2 data-[state=active]:bg-blue-500 data-[state=active]:text-white data-[state=active]:shadow-md transition-all font-bold py-3"
              >
                <span className="text-xs sm:text-sm">
                  {filteredModels.find(m => m.id.endsWith('-a'))?.version.split(' - ')[1] || 'Verze A'}
                </span>
              </TabsTrigger>
              <TabsTrigger 
                value="b" 
                className="gap-2 data-[state=active]:bg-blue-500 data-[state=active]:text-white data-[state=active]:shadow-md transition-all font-bold py-3"
              >
                <span className="text-xs sm:text-sm">
                  {filteredModels.find(m => m.id.endsWith('-b'))?.version.split(' - ')[1] || 'Verze B'}
                </span>
              </TabsTrigger>
            </TabsList>
          </Tabs>
        </div>
      )}

      {/* üé® CANVAS DISPLAY - Spoleƒçn√© pro mobile i desktop */}
      <div className="bg-white rounded-xl shadow-lg border-2 border-gray-200 overflow-hidden">
        {/* Model Header */}
        <div className="bg-gradient-to-r from-gray-50 to-gray-100 p-4 sm:p-6 border-b-2 border-gray-200">
          <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-3">
            <div>
              <h4 className="text-xl sm:text-2xl font-bold text-gray-900 flex items-center gap-2">
                {currentModel.emoji} {currentModel.name} - {currentModel.version}
              </h4>
              <p className="text-sm sm:text-base text-gray-600">{currentModel.description}</p>
            </div>
            <Button
              variant="outline"
              size="sm"
              onClick={() => setShowInsights(!showInsights)}
              className="gap-2 shrink-0"
            >
              <Info className="w-4 h-4" />
              {showInsights ? 'Skr√Ωt' : 'Proƒç to funguje?'}
            </Button>
          </div>
        </div>

        {/* Canvas - DESKTOP ONLY */}
        {!isMobile && (
          <div className="p-4">
            <ReadOnlyBusinessModelCanvas
              key={`${currentModel.name}-${currentModel.version}`}
              sections={[
                { id: 'partners', title: 'ü§ù Kl√≠ƒçov√° partnerstv√≠', items: currentModel.partnerships.map(p => ({ text: p.text, color: p.color })), gridArea: 'partners' },
                { id: 'activities', title: 'üéØ Kl√≠ƒçov√© aktivity', items: currentModel.activities.map(a => ({ text: a.text, color: a.color })), gridArea: 'activities' },
                { id: 'resources', title: 'üîë Kl√≠ƒçov√© zdroje', items: currentModel.resources.map(r => ({ text: r.text, color: r.color })), gridArea: 'resources' },
                { id: 'value', title: 'üíé Hodnotov√° nab√≠dka', items: currentModel.value.map(v => ({ text: v.text, color: v.color, price: v.price })), gridArea: 'value' },
                { id: 'relationships', title: '‚ù§Ô∏è Vztahy', items: currentModel.relationships.map(r => ({ text: r.text, color: r.color })), gridArea: 'relationships' },
                { id: 'channels', title: 'üì¢ Kan√°ly', items: currentModel.channels.map(c => ({ text: c.text, color: c.color })), gridArea: 'channels' },
                { id: 'segments', title: 'üë• Segmenty', items: currentModel.segments.map(s => ({ text: s.text, color: s.color })), gridArea: 'segments' },
                { id: 'costs', title: 'üí∏ Struktura n√°klad≈Ø', items: currentModel.costs.map(c => ({ text: c.text || c, color: 'white' as const, percentage: c.percentage })), gridArea: 'costs' },
                { id: 'revenue', title: 'üí∞ Zdroje p≈ô√≠jm≈Ø', items: currentModel.revenue.map(r => ({ text: r.text, color: r.color, percentage: r.percentage })), gridArea: 'revenue' }
              ]}
              highlightSections={['segments', 'value']}
            />
          </div>
        )}

        {/* Mobile Cards - kl√≠ƒçov√© informace v kart√°ch */}
        {isMobile && (
          <div className="px-4 py-6 space-y-4">
            {/* Segmenty z√°kazn√≠k≈Ø */}
            <div className="bg-gradient-to-br from-blue-50 to-blue-100 border-2 border-blue-300 rounded-xl p-4">
              <h5 className="font-bold text-blue-900 mb-3 flex items-center gap-2">
                üë• Segmenty z√°kazn√≠k≈Ø
              </h5>
              <div className="space-y-2">
                {currentModel.segments.map((seg, idx) => (
                  <div key={idx} className="bg-white rounded-lg p-3 shadow-sm">
                    <p className="text-sm text-gray-800">{seg.text}</p>
                  </div>
                ))}
              </div>
            </div>

            {/* Hodnotov√° nab√≠dka */}
            <div className="bg-gradient-to-br from-purple-50 to-purple-100 border-2 border-purple-300 rounded-xl p-4">
              <h5 className="font-bold text-purple-900 mb-3 flex items-center gap-2">
                üíé Hodnotov√° nab√≠dka
              </h5>
              <div className="space-y-2">
                {currentModel.value.map((val, idx) => (
                  <div key={idx} className="bg-white rounded-lg p-3 shadow-sm">
                    <p className="text-sm text-gray-800">{val.text}</p>
                  </div>
                ))}
              </div>
            </div>

            {/* P≈ô√≠jmy */}
            <div className="bg-gradient-to-br from-green-50 to-green-100 border-2 border-green-300 rounded-xl p-4">
              <h5 className="font-bold text-green-900 mb-3 flex items-center gap-2">
                üí∞ Zdroje p≈ô√≠jm≈Ø
              </h5>
              <div className="space-y-2">
                {currentModel.revenue.map((rev, idx) => (
                  <div key={idx} className="bg-white rounded-lg p-3 shadow-sm flex items-center justify-between">
                    <p className="text-sm text-gray-800">{rev.text}</p>
                    {rev.percentage && (
                      <span className="text-xs font-bold text-green-700 bg-green-100 px-2 py-1 rounded">
                        {rev.percentage}
                      </span>
                    )}
                  </div>
                ))}
              </div>
            </div>

            {/* Kl√≠ƒçov√© aktivity */}
            <div className="bg-gradient-to-br from-orange-50 to-orange-100 border-2 border-orange-300 rounded-xl p-4">
              <h5 className="font-bold text-orange-900 mb-3 flex items-center gap-2">
                üéØ Kl√≠ƒçov√© aktivity
              </h5>
              <div className="space-y-2">
                {currentModel.activities.map((act, idx) => (
                  <div key={idx} className="bg-white rounded-lg p-3 shadow-sm">
                    <p className="text-sm text-gray-800">{act.text}</p>
                  </div>
                ))}
              </div>
            </div>
          </div>
        )}

        {/* Insights Panel */}
        {showInsights && (
          <div className="bg-gradient-to-r from-amber-50 to-yellow-50 border-t-2 border-amber-200 p-4 sm:p-6">
            <h5 className="font-bold text-gray-900 mb-4 flex items-center gap-2">
              <Info className="w-5 h-5 text-amber-600" />
              üí° Proƒç tento model funguje?
            </h5>
            <div className="space-y-3">
              <div className="bg-white border border-amber-200 rounded-lg p-3 sm:p-4">
                <p className="text-sm font-bold text-amber-900 mb-2">üéØ Kl√≠ƒç k √∫spƒõchu:</p>
                <p className="text-sm text-amber-800">{currentModel.insights.keySuccess}</p>
              </div>
              <div className="bg-white border border-amber-200 rounded-lg p-3 sm:p-4">
                <p className="text-sm font-bold text-amber-900 mb-2">üß† Proƒç to funguje:</p>
                <p className="text-sm text-amber-800">{currentModel.insights.whyItWorks}</p>
              </div>
              <div className="bg-white border border-amber-200 rounded-lg p-3 sm:p-4">
                <p className="text-sm font-bold text-amber-900 mb-2">üí∞ Cross-sell strategie:</p>
                <p className="text-sm text-amber-800">{currentModel.insights.crossSell}</p>
              </div>
              <div className="bg-white border border-amber-200 rounded-lg p-3 sm:p-4">
                <p className="text-sm font-bold text-amber-900 mb-2">üìä Struktura p≈ô√≠jm≈Ø:</p>
                <p className="text-sm text-amber-800">{currentModel.insights.revenueBreakdown}</p>
              </div>
            </div>
          </div>
        )}
      </div>

      {/* üñ•Ô∏è DESKTOP ONLY: VERSION SELECTOR BUTTONS dole pod canvasem */}
      {!isMobile && (
        <div className="bg-gradient-to-r from-blue-50 to-indigo-50 border-2 border-blue-200 rounded-xl p-6">
          <h4 className="font-bold text-blue-900 mb-4 text-center text-lg">
            üìä Porovnejte r≈Øzn√© strategie ve stejn√©m odvƒõtv√≠:
          </h4>
          <p className="text-sm text-blue-700 text-center mb-6">
            Ka≈æd√Ω model funguje jinak - v≈°imnƒõte si rozd√≠l≈Ø v segmentech, hodnotƒõ a p≈ô√≠jmech!
          </p>
          
          {/* Version Buttons */}
          <div className="grid grid-cols-2 gap-4 max-w-2xl mx-auto">
            {filteredModels.map((model) => {
              const version = model.id.endsWith('-a') ? 'a' : 'b';
              const isActive = selectedVersion === version;
              
              return (
                <button
                  key={model.id}
                  onClick={() => handleVersionChange(version)}
                  className={`
                    relative p-6 rounded-xl border-2 transition-all
                    ${isActive 
                      ? 'bg-blue-500 border-blue-600 text-white shadow-lg scale-105' 
                      : 'bg-white border-blue-300 text-gray-900 hover:border-blue-400 hover:shadow-md'
                    }
                  `}
                >
                  {/* Active indicator */}
                  {isActive && (
                    <div className="absolute -top-2 -right-2 bg-green-500 text-white rounded-full p-1">
                      <CheckCircle2 className="w-5 h-5" />
                    </div>
                  )}
                  
                  <div className="text-left">
                    <h5 className={`font-bold mb-2 ${isActive ? 'text-white' : 'text-gray-900'}`}>
                      {model.version}
                    </h5>
                    <p className={`text-sm ${isActive ? 'text-blue-100' : 'text-gray-600'}`}>
                      {model.description}
                    </p>
                  </div>
                </button>
              );
            })}
          </div>
        </div>
      )}

      {/* Vysvƒõtlen√≠ zv√Ωraznƒõn√≠ */}
      <div className="bg-blue-50 border-2 border-blue-300 rounded-xl p-6 text-center">
        <p className="text-blue-900">
          üí° <strong>Proƒç jsou zv√Ωraznƒõn√© Segmenty a Hodnota?</strong><br />
          Proto≈æe to jsou HLAVN√ç stavebn√≠ bloky ka≈æd√©ho Business Modelu! V≈°e ostatn√≠ se odv√≠j√≠ od toho KDO jsou va≈°i z√°kazn√≠ci (Segmenty) a CO jim nab√≠z√≠te (Hodnota).
        </p>
      </div>

      {/* CTA - Dokonƒçit Modul 2 - JEN kdy≈æ lekce NEN√ç dokonƒçen√° */}
      {!isLessonCompleted && (
        <>
          {!isCompleted ? (
            <div className="bg-gradient-to-r from-green-500 to-emerald-600 rounded-2xl p-8 text-center shadow-2xl mt-6 animate-in fade-in duration-500">
              <h3 className="mb-3 text-white">
                üéâ Gratuluji! Vidƒõli jste √∫spƒõ≈°n√© modely
              </h3>
              <p className="text-green-100 mb-6">
                Inspirovali jste se? M≈Ø≈æete se kdykoliv vr√°tit a prohl√©dnout si modely znovu.
              </p>
              <Button
                onClick={() => {
                  setIsCompleted(true);
                  onComplete?.();
                }}
                size="lg"
                className="bg-white text-green-700 hover:bg-green-50 font-bold text-lg px-12 py-6 shadow-xl hover:shadow-2xl transition-all hover:scale-105"
              >
                Dokonƒçit Modul 2 üéâ
              </Button>
            </div>
          ) : (
            <div className="bg-green-50 border-2 border-green-300 rounded-2xl p-6 mt-6 animate-in fade-in zoom-in-95 duration-300">
              <div className="flex items-center gap-3 mb-4">
                <div className="bg-green-500 rounded-full p-3">
                  <CheckCircle2 className="w-8 h-8 text-white" />
                </div>
                <div className="flex-1">
                  <h3 className="text-2xl font-bold text-green-900">
                    ‚úÖ Modul 2 dokonƒçen!
                  </h3>
                  <p className="text-sm text-green-700">
                    Skvƒõl√° pr√°ce! Nyn√≠ zaƒçnƒõte s Modulem 3 - Hodnotov√° nab√≠dka.
                  </p>
                </div>
              </div>
              
              <div className="flex gap-3">
                {onNavigateNext && (
                  <Button
                    onClick={onNavigateNext}
                    size="lg"
                    className="flex-1 bg-green-600 hover:bg-green-700"
                  >
                    Pokraƒçovat na Modul 3 ‚Üí
                  </Button>
                )}
                <Button
                  onClick={() => setIsCompleted(false)}
                  variant="outline"
                  size="lg"
                >
                  üîÑ Prohl√©dnout znovu
                </Button>
              </div>
            </div>
          )}
        </>
      )}
    </div>
  );
}
