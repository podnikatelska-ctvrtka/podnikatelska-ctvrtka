import { useState } from "react";
import { ChevronLeft, ChevronRight, Info, CheckCircle2 } from "lucide-react";
import { Button } from "./ui/button";
import { ReadOnlyBusinessModelCanvas } from "./ReadOnlyBusinessModelCanvas";

interface Props {
  onComplete?: () => void;
  onNavigateNext?: () => void;
}

// Typ pro business model data
interface BusinessModel {
  id: string;
  name: string;
  version: string;
  category: string;
  emoji: string;
  description: string;
  segments: Array<{ text: string; color: string }>;
  value: Array<{ text: string; color: string; price?: string }>;
  channels: Array<{ text: string; color: string }>;
  relationships: Array<{ text: string; color: string }>;
  revenue: Array<{ text: string; color: string; percentage?: string }>;
  activities: Array<{ text: string; color: string }>;
  resources: Array<{ text: string; color: string }>;
  partnerships: Array<{ text: string; color: string }>;
  costs: Array<{ text: string; percentage?: string }>;
  insights: {
    crossSell: string;
    revenueBreakdown: string;
    keySuccess: string;
    whyItWorks: string;
  };
}

const BUSINESS_MODELS: BusinessModel[] = [
  // ‚òï KAV√ÅRNA - VERZE A: Workspace model
  {
    id: 'cafe-a',
    name: 'Kav√°rna',
    version: 'A - Workspace',
    category: 'Kav√°rny',
    emoji: '‚òï',
    description: 'Kav√°rna jako coworking prostor pro freelancery',
    segments: [
      { text: 'Freelance≈ôi (workspace)', color: 'blue' },
      { text: 'Studenti (p≈ô√≠prava)', color: 'green' }
    ],
    value: [
      { text: 'Workspace cel√Ω den + WiFi', color: 'blue' },
      { text: 'Tich√° m√≠sta pro uƒçen√≠', color: 'green' }
    ],
    channels: [
      { text: 'Instagram (workspace fotky)', color: 'blue' },
      { text: 'Google "kav√°rna WiFi"', color: 'blue' },
      { text: 'Univerzitn√≠ skupiny', color: 'green' }
    ],
    relationships: [
      { text: 'Loyalty karty', color: 'blue' },
      { text: 'Community events', color: 'blue' }
    ],
    revenue: [
      { text: 'K√°va a n√°poje', color: 'global', percentage: '60%' },
      { text: 'J√≠dlo', color: 'global', percentage: '30%' },
      { text: 'Dezerty', color: 'global', percentage: '10%' }
    ],
    activities: [
      { text: 'P≈ô√≠prava k√°vy', color: 'global' },
      { text: '√ödr≈æba workspace', color: 'blue' },
      { text: 'Marketing (Instagram)', color: 'global' }
    ],
    resources: [
      { text: 'Barist√© (2)', color: 'global' },
      { text: 'Espresso stroj', color: 'global' },
      { text: 'Velk√Ω prostor se stoly', color: 'blue' },
      { text: 'Rychl√© WiFi', color: 'blue' }
    ],
    partnerships: [
      { text: 'Dodavatel specialty k√°vy', color: 'global' },
      { text: 'Lok√°ln√≠ pek√°rna', color: 'global' }
    ],
    costs: [
      { text: 'K√°va a suroviny', percentage: '30%' },
      { text: 'N√°jem velk√©ho prostoru', percentage: '40%' },
      { text: 'Mzdy', percentage: '30%' }
    ],
    insights: {
      crossSell: 'Dezerty k r√°no k√°vƒõ (10% p≈ô√≠jm≈Ø, mar≈æe 70%!)',
      revenueBreakdown: 'K√°va 60% + J√≠dlo 30% + Dezerty 10% = stabiln√≠ p≈ô√≠jem po cel√Ω den',
      keySuccess: 'Velk√Ω prostor + WiFi = freelance≈ôi z≈Øst√°vaj√≠ 4-6 hodin (pr≈Ømƒõr 3 k√°vy!)',
      whyItWorks: 'Freelance≈ôi pot≈ôebuj√≠ workspace ale nechce platit coworking ‚Üí kav√°rna je levnƒõj≈°√≠ alternativa'
    }
  },
  
  // ‚òï KAV√ÅRNA - VERZE B: Quick coffee model
  {
    id: 'cafe-b',
    name: 'Kav√°rna',
    version: 'B - Quick Coffee',
    category: 'Kav√°rny',
    emoji: '‚òï',
    description: 'Rychl√° kav√°rna na ru≈°n√© k≈ôi≈æovatce (to-go model)',
    segments: [
      { text: 'Rann√≠ doj√≠≈ædƒõj√≠c√≠', color: 'blue' },
      { text: 'Obƒõdov√° pauza (office)', color: 'green' }
    ],
    value: [
      { text: 'K√°va za 2 min (r√°no)', color: 'blue' },
      { text: 'Express obƒõdy (lunch)', color: 'green' }
    ],
    channels: [
      { text: 'Um√≠stƒõn√≠ na k≈ôi≈æovatce', color: 'blue' },
      { text: 'Instagram (rychl√© story)', color: 'blue' },
      { text: 'Google Maps "bl√≠zko"', color: 'green' }
    ],
    relationships: [
      { text: 'Vƒõrnostn√≠ karta', color: 'blue' },
      { text: 'Mobiln√≠ objedn√°vka', color: 'blue' }
    ],
    revenue: [
      { text: 'K√°va to-go (r√°no)', color: 'blue', percentage: '50%' },
      { text: 'Express obƒõdy', color: 'green', percentage: '40%' },
      { text: 'Dezerty a bagety', color: 'global', percentage: '10%' }
    ],
    activities: [
      { text: 'P≈ô√≠prava k√°vy', color: 'global' },
      { text: 'Prep work', color: 'green' },
      { text: 'Z√°sobov√°n√≠', color: 'global' }
    ],
    resources: [
      { text: 'Barist√© (3)', color: 'global' },
      { text: 'Espresso stroj', color: 'blue' },
      { text: 'Mal√Ω prostor', color: 'global' }
    ],
    partnerships: [
      { text: 'Dodavatel k√°vy (velkoobchod)', color: 'global' },
      { text: 'Catering firma (obƒõdy)', color: 'green' }
    ],
    costs: [
      { text: 'Suroviny', percentage: '35%' },
      { text: 'N√°jem (pr√©miov√° lokace!)', percentage: '35%' },
      { text: 'Mzdy (3 smƒõny)', percentage: '30%' }
    ],
    insights: {
      crossSell: 'Bagety a dezerty k rann√≠ k√°vƒõ (10% p≈ô√≠jm≈Ø, vysok√° mar≈æe)',
      revenueBreakdown: 'R√°no k√°va 50% + Obƒõd 40% + Cross-sell 10% = 2 peak times dennƒõ',
      keySuccess: 'Lokace na k≈ôi≈æovatce = dennƒõ 500+ lid√≠ projde kolem',
      whyItWorks: 'Rychlost (2 min) + lokace = ka≈æd√© r√°no stejn√≠ z√°kazn√≠ci (habits!)'
    }
  },

  // üçï PIZZERIE - VERZE A: Family friendly
  {
    id: 'pizza-a',
    name: 'Pizzerie',
    version: 'A - Family Friendly',
    category: 'Restaurace',
    emoji: 'üçï',
    description: 'Rodinn√° pizzerie s dƒõtsk√Ωm koutkem',
    segments: [
      { text: 'Rodiny s dƒõtmi 3-10 let', color: 'blue' },
      { text: 'Narozeninov√© oslavy', color: 'purple' }
    ],
    value: [
      { text: 'Dƒõtsk√Ω koutek + menu', color: 'blue' },
      { text: 'Narozeninov√© bal√≠ƒçky', color: 'purple' }
    ],
    channels: [
      { text: 'Facebook rodinn√© skupiny', color: 'blue' },
      { text: 'Instagram (fotky dƒõt√≠)', color: 'blue' },
      { text: 'Doporuƒçen√≠ rodiƒç≈Ø', color: 'blue' }
    ],
    relationships: [
      { text: 'Vƒõrnostn√≠ program', color: 'blue' },
      { text: 'Organizace narozenin', color: 'purple' }
    ],
    revenue: [
      { text: 'Bƒõ≈æn√© n√°v≈°tƒõvy rodin', color: 'blue', percentage: '60%' },
      { text: 'Narozeninov√© party', color: 'purple', percentage: '25%' },
      { text: 'N√°poje a zmrzlina', color: 'global', percentage: '15%' }
    ],
    activities: [
      { text: 'P≈ô√≠prava pizzy', color: 'global' },
      { text: 'Organizace narozenin', color: 'purple' },
      { text: '√ödr≈æba dƒõtsk√©ho koutku', color: 'blue' }
    ],
    resources: [
      { text: 'Kucha≈ôi (2)', color: 'global' },
      { text: 'Pec na pizzu', color: 'global' },
      { text: 'Dƒõtsk√Ω koutek', color: 'blue' },
      { text: 'Party m√≠stnost', color: 'purple' }
    ],
    partnerships: [
      { text: 'Dodavatel surovin', color: 'global' },
      { text: 'Anim√°tor pro narozeniny', color: 'purple' }
    ],
    costs: [
      { text: 'Suroviny', percentage: '30%' },
      { text: 'N√°jem velk√©ho prostoru', percentage: '35%' },
      { text: 'Mzdy + anim√°tor', percentage: '35%' }
    ],
    insights: {
      crossSell: 'N√°poje a zmrzlina pro dƒõti (15% p≈ô√≠jm≈Ø, vysok√° mar≈æe)',
      revenueBreakdown: 'Bƒõ≈æn√© j√≠dlo 60% + Narozeniny 25% (vysok√° mar≈æe!) + N√°poje 15%',
      keySuccess: 'Dƒõtsk√Ω koutek = rodiƒçe z≈Øst√°vaj√≠ d√©le (pr≈Ømƒõr 90 min vs 45 min)',
      whyItWorks: 'Rodiƒçe pot≈ôebuj√≠ m√≠sto kde dƒõti m≈Ø≈æou bƒõhat = ochota platit v√≠ce'
    }
  },

  // üçï PIZZERIE - VERZE B: Student takeaway
  {
    id: 'pizza-b',
    name: 'Pizzerie',
    version: 'B - Student Takeaway',
    category: 'Restaurace',
    emoji: 'üçï',
    description: 'Rychl√° pizza u univerzity (slice model)',
    segments: [
      { text: 'Studenti (rychl√Ω obƒõd)', color: 'blue' },
      { text: 'Veƒçern√≠ party skupiny', color: 'green' }
    ],
    value: [
      { text: 'Pizza slice za 40 Kƒç', color: 'blue' },
      { text: 'Mega party box 4 pizzy', color: 'green' }
    ],
    channels: [
      { text: 'Instagram stories', color: 'blue' },
      { text: 'Univerzitn√≠ n√°stƒõnky', color: 'blue' },
      { text: 'WhatsApp objedn√°vky', color: 'green' }
    ],
    relationships: [
      { text: 'Slevov√° karta pro studenty', color: 'blue' },
      { text: 'Party objedn√°vky p≈ôes WhatsApp', color: 'green' }
    ],
    revenue: [
      { text: 'Slice prodej (obƒõd)', color: 'blue', percentage: '50%' },
      { text: 'Party objedn√°vky (veƒçer)', color: 'green', percentage: '35%' },
      { text: 'N√°poje', color: 'global', percentage: '15%' }
    ],
    activities: [
      { text: 'Peƒçen√≠ pizzy', color: 'global' },
      { text: 'Prep work (p≈ôipraven√© slicy)', color: 'blue' },
      { text: 'Party balen√≠', color: 'green' }
    ],
    resources: [
      { text: 'Kucha≈ôi (2)', color: 'global' },
      { text: 'Velk√° pec (slice ready)', color: 'blue' },
      { text: 'Mal√Ω prostor (hlavnƒõ takeaway)', color: 'global' }
    ],
    partnerships: [
      { text: 'Dodavatel surovin', color: 'global' },
      { text: 'Studentsk√© organizace', color: 'blue' }
    ],
    costs: [
      { text: 'Suroviny', percentage: '35%' },
      { text: 'N√°jem (bl√≠zko uni)', percentage: '30%' },
      { text: 'Mzdy', percentage: '35%' }
    ],
    insights: {
      crossSell: 'N√°poje k pizze (15% p≈ô√≠jm≈Ø, vysok√° mar≈æe)',
      revenueBreakdown: 'Obƒõd slices 50% + Party veƒçer 35% + N√°poje 15% = 2 peak times',
      keySuccess: 'Lokace u univerzity + n√≠zk√° cena (40 Kƒç slice) = dennƒõ 200+ student≈Ø',
      whyItWorks: 'Studenti nemaj√≠ ƒças ani pen√≠ze = rychlost + n√≠zk√° cena wins!'
    }
  },

  // üèãÔ∏è FITNESS - VERZE A: Pr√©miov√© studio
  {
    id: 'fitness-a',
    name: 'Fitness',
    version: 'A - Premium',
    category: 'Fitness',
    emoji: 'üèãÔ∏è',
    description: 'Pr√©miov√© studio s personal train√©ry',
    segments: [
      { text: 'Profesion√°lov√© 30-45 let', color: 'blue' },
      { text: 'Vƒõkov√© skupiny 50+ (rehabilitace)', color: 'green' }
    ],
    value: [
      { text: 'Personal training', color: 'blue' },
      { text: 'Rehabilitaƒçn√≠ programy', color: 'green' }
    ],
    channels: [
      { text: 'LinkedIn (profesion√°lov√©)', color: 'blue' },
      { text: 'Doporuƒçen√≠ l√©ka≈ô≈Ø', color: 'green' },
      { text: 'Instagram (transformace)', color: 'blue' }
    ],
    relationships: [
      { text: 'Osobn√≠ tren√©r (v≈ædy stejn√Ω)', color: 'blue' },
      { text: 'Mƒõs√≠ƒçn√≠ checkup', color: 'blue' }
    ],
    revenue: [
      { text: 'Personal training', color: 'blue', percentage: '50%' },
      { text: 'Mƒõs√≠ƒçn√≠ ƒçlenstv√≠', color: 'global', percentage: '30%' },
      { text: 'Suplementy', color: 'global', percentage: '20%' }
    ],
    activities: [
      { text: 'Personal training', color: 'blue' },
      { text: 'Rehabilitaƒçn√≠ lekce', color: 'green' },
      { text: 'V√Ω≈æiva konzultace', color: 'global' }
    ],
    resources: [
      { text: 'Certifikovan√≠ tren√©≈ôi (5)', color: 'blue' },
      { text: 'Premium vybaven√≠', color: 'global' },
      { text: 'Mal√Ω prostor (max 20 lid√≠)', color: 'global' }
    ],
    partnerships: [
      { text: 'L√©ka≈ôi (doporuƒçen√≠)', color: 'green' },
      { text: 'Dodavatel suplement≈Ø', color: 'global' }
    ],
    costs: [
      { text: 'Mzdy tren√©r≈Ø (vysok√©!)', percentage: '50%' },
      { text: 'N√°jem premium lokace', percentage: '30%' },
      { text: 'Vybaven√≠', percentage: '20%' }
    ],
    insights: {
      crossSell: 'Suplementy po tr√©ninku (20% p≈ô√≠jm≈Ø, mar≈æe 60%!)',
      revenueBreakdown: 'PT 50% + ƒålenstv√≠ 30% + Suplementy 20% = vysok√© p≈ô√≠jmy na osobu',
      keySuccess: 'Osobn√≠ tren√©≈ôi = retention 85% (pr≈Ømƒõr industry je 40%)',
      whyItWorks: 'Profesion√°lov√© maj√≠ pen√≠ze ale ne ƒças = ochota platit za osobn√≠ p≈ô√≠stup'
    }
  },

  // üèãÔ∏è FITNESS - VERZE B: Group classes
  {
    id: 'fitness-b',
    name: 'Fitness',
    version: 'B - Group Classes',
    category: 'Fitness',
    emoji: 'üèãÔ∏è',
    description: 'Velk√© studio se skupinov√Ωmi lekcemi',
    segments: [
      { text: 'Mlad√≠ lid√© 20-35 let', color: 'blue' },
      { text: '≈Ωeny (r√°no/odpoledne)', color: 'green' }
    ],
    value: [
      { text: 'Skupinov√© lekce', color: 'blue' },
      { text: 'Rann√≠ j√≥ga (≈æeny)', color: 'green' }
    ],
    channels: [
      { text: 'Instagram (video z lekc√≠)', color: 'blue' },
      { text: 'TikTok challenges', color: 'blue' },
      { text: 'Facebook maminky skupiny', color: 'green' }
    ],
    relationships: [
      { text: 'Community vibe', color: 'blue' },
      { text: 'Messenger booking', color: 'blue' }
    ],
    revenue: [
      { text: 'Mƒõs√≠ƒçn√≠ ƒçlenstv√≠', color: 'global', percentage: '70%' },
      { text: 'Drop-in lekce', color: 'blue', percentage: '20%' },
      { text: 'Merch a ≈°ejkry', color: 'global', percentage: '10%' }
    ],
    activities: [
      { text: 'Skupinov√© lekce', color: 'global' },
      { text: 'Marketing (social media)', color: 'blue' },
      { text: 'Community events', color: 'global' }
    ],
    resources: [
      { text: 'Instrukto≈ôi (3)', color: 'global' },
      { text: 'Velk√Ω prostor (50+ lid√≠)', color: 'global' },
      { text: 'Hudebn√≠ syst√©m', color: 'global' }
    ],
    partnerships: [
      { text: 'Fitness influence≈ôi', color: 'blue' },
      { text: 'Dodavatel merch', color: 'global' }
    ],
    costs: [
      { text: 'Mzdy (instrukto≈ôi)', percentage: '40%' },
      { text: 'N√°jem velk√©ho prostoru', percentage: '40%' },
      { text: 'Marketing', percentage: '20%' }
    ],
    insights: {
      crossSell: 'Merch a ≈°ejkry (10% p≈ô√≠jm≈Ø, mar≈æe 70%)',
      revenueBreakdown: 'ƒålenstv√≠ 70% (stabiln√≠!) + Drop-in 20% + Merch 10%',
      keySuccess: 'Community = retention 70% (lid√© p≈ôijdou kv≈Øli p≈ô√°tel≈Øm)',
      whyItWorks: 'Mlad√≠ lid√© chtƒõj√≠ soci√°ln√≠ zku≈°enost = fitness jako z√°bava'
    }
  }
];

const CATEGORIES = [
  { id: 'Kav√°rny', name: 'Kav√°rny', emoji: '‚òï' },
  { id: 'Restaurace', name: 'Pizzerie', emoji: 'üçï' },
  { id: 'Fitness', name: 'Fitness', emoji: 'üèãÔ∏è' }
];

export function BusinessModelGallery({ onComplete, onNavigateNext }: Props) {
  const [selectedCategory, setSelectedCategory] = useState('Kav√°rny');
  const [currentIndex, setCurrentIndex] = useState(0);
  const [showInsights, setShowInsights] = useState(false);
  const [isCompleted, setIsCompleted] = useState(false);

  const filteredModels = BUSINESS_MODELS.filter(m => m.category === selectedCategory);
  const currentModel = filteredModels[currentIndex];

  const handleNext = () => {
    setCurrentIndex((prev) => (prev + 1) % filteredModels.length);
    setShowInsights(false);
  };

  const handlePrev = () => {
    setCurrentIndex((prev) => (prev - 1 + filteredModels.length) % filteredModels.length);
    setShowInsights(false);
  };

  const handleCategoryChange = (categoryId: string) => {
    setSelectedCategory(categoryId);
    setCurrentIndex(0);
    setShowInsights(false);
  };

  if (!currentModel) return null;

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="bg-gradient-to-r from-indigo-500 to-purple-600 text-white p-6 rounded-xl">
        <h3 className="text-2xl font-bold mb-2">üí° Galerie Business Model≈Ø</h3>
        <p className="text-purple-100">
          Porovnejte r≈Øzn√© strategie ve stejn√©m odvƒõtv√≠ - ka≈æd√Ω model funguje jinak!
        </p>
      </div>

      {/* Category filters - JEN IKONY */}
      <div className="flex gap-3 justify-center flex-wrap">
        {CATEGORIES.map((cat) => (
          <Button
            key={cat.id}
            onClick={() => handleCategoryChange(cat.id)}
            variant={selectedCategory === cat.id ? 'default' : 'outline'}
            size="lg"
            className="gap-2"
          >
            <span className="text-2xl">{cat.emoji}</span>
            <span>{cat.name}</span>
          </Button>
        ))}
      </div>

      {/* Main Canvas Display */}
      <div className="bg-white rounded-xl shadow-lg border-2 border-gray-200 overflow-hidden">
          {/* Model Header */}
          <div className="bg-gradient-to-r from-gray-50 to-gray-100 p-4 border-b-2 border-gray-200">
            <div className="flex items-center justify-between">
              <div>
                <h4 className="text-2xl font-bold text-gray-900 flex items-center gap-2">
                  {currentModel.emoji} {currentModel.name} - {currentModel.version}
                </h4>
                <p className="text-sm text-gray-600">{currentModel.description}</p>
              </div>
              <Button
                variant="outline"
                size="sm"
                onClick={() => setShowInsights(!showInsights)}
                className="gap-2"
              >
                <Info className="w-4 h-4" />
                {showInsights ? 'Skr√Ωt' : 'Proƒç to funguje?'}
              </Button>
            </div>
          </div>

          {/* Canvas - POU≈ΩIT√ç EXISTUJ√çC√çHO KOMPONENTY */}
          <div className="px-4 py-6">
            <ReadOnlyBusinessModelCanvas
              key={`${currentModel.name}-${currentModel.version}`}
              sections={[
                { id: 'partners', title: 'ü§ù Kl√≠ƒçov√° partnerstv√≠', items: currentModel.partnerships.map(p => ({ text: p.text, color: p.color })), gridArea: 'partners' },
                { id: 'activities', title: 'üéØ Kl√≠ƒçov√© aktivity', items: currentModel.activities.map(a => ({ text: a.text, color: a.color })), gridArea: 'activities' },
                { id: 'resources', title: 'üîë Kl√≠ƒçov√© zdroje', items: currentModel.resources.map(r => ({ text: r.text, color: r.color })), gridArea: 'resources' },
                { id: 'value', title: 'üíé Hodnotov√° nab√≠dka', items: currentModel.value.map(v => ({ text: v.text, color: v.color, price: v.price })), gridArea: 'value' },
                { id: 'relationships', title: '‚ù§Ô∏è Vztahy', items: currentModel.relationships.map(r => ({ text: r.text, color: r.color })), gridArea: 'relationships' },
                { id: 'channels', title: 'üì¢ Kan√°ly', items: currentModel.channels.map(c => ({ text: c.text, color: c.color })), gridArea: 'channels' },
                { id: 'segments', title: 'üë• Segmenty', items: currentModel.segments.map(s => ({ text: s.text, color: s.color })), gridArea: 'segments' },
                { id: 'costs', title: 'üí∏ Struktura n√°klad≈Ø', items: currentModel.costs.map(c => ({ text: c.text || c, color: 'white' as const, percentage: c.percentage })), gridArea: 'costs' },
                { id: 'revenue', title: 'üí∞ Zdroje p≈ô√≠jm≈Ø', items: currentModel.revenue.map(r => ({ text: r.text, color: r.color, percentage: r.percentage })), gridArea: 'revenue' }
              ]}
              highlightSections={['segments', 'value']}
            />
          </div>

          {/* Insights Panel */}
          {showInsights && (
            <div
              className="bg-gradient-to-r from-amber-50 to-yellow-50 border-t-2 border-amber-200 p-6"
            >
              <h5 className="font-bold text-gray-900 mb-4 flex items-center gap-2">
                <Info className="w-5 h-5 text-amber-600" />
                üí° Proƒç tento model funguje?
              </h5>
              <div className="space-y-3">
                <div className="bg-white border border-amber-200 rounded-lg p-4">
                  <p className="text-sm font-bold text-amber-900 mb-2">üéØ Kl√≠ƒç k √∫spƒõchu:</p>
                  <p className="text-sm text-amber-800">{currentModel.insights.keySuccess}</p>
                </div>
                <div className="bg-white border border-amber-200 rounded-lg p-4">
                  <p className="text-sm font-bold text-amber-900 mb-2">üß† Proƒç to funguje:</p>
                  <p className="text-sm text-amber-800">{currentModel.insights.whyItWorks}</p>
                </div>
                <div className="bg-white border border-amber-200 rounded-lg p-4">
                  <p className="text-sm font-bold text-amber-900 mb-2">üí∞ Cross-sell strategie:</p>
                  <p className="text-sm text-amber-800">{currentModel.insights.crossSell}</p>
                </div>
                <div className="bg-white border border-amber-200 rounded-lg p-4">
                  <p className="text-sm font-bold text-amber-900 mb-2">üìä Struktura p≈ô√≠jm≈Ø:</p>
                  <p className="text-sm text-amber-800">{currentModel.insights.revenueBreakdown}</p>
                </div>
              </div>
            </div>
          )}
        </div>

      {/* Navigation */}
      <div className="flex items-center justify-between">
        <Button
          onClick={handlePrev}
          variant="outline"
          className="gap-2"
        >
          <ChevronLeft className="w-4 h-4" />
          P≈ôedchoz√≠
        </Button>

        <div className="text-center">
          <p className="text-sm font-bold text-gray-900">
            {currentIndex + 1} / {filteredModels.length}
          </p>
          <p className="text-xs text-gray-500">
            {currentModel.version}
          </p>
        </div>

        <Button
          onClick={handleNext}
          variant="outline"
          className="gap-2"
        >
          Dal≈°√≠
          <ChevronRight className="w-4 h-4" />
        </Button>
      </div>

      {/* Vysvƒõtlen√≠ zv√Ωraznƒõn√≠ */}
      <div className="bg-blue-50 border-2 border-blue-300 rounded-xl p-6 text-center">
        <p className="text-blue-900">
          üí° <strong>Proƒç jsou zv√Ωraznƒõn√© Segmenty a Hodnota?</strong><br />
          Proto≈æe to jsou HLAVN√ç stavebn√≠ bloky ka≈æd√©ho Business Modelu! V≈°e ostatn√≠ se odv√≠j√≠ od toho KDO jsou va≈°i z√°kazn√≠ci (Segmenty) a CO jim nab√≠z√≠te (Hodnota).
        </p>
      </div>

      {/* CTA - Dokonƒçit Modul 2 */}
      {!isCompleted ? (
        <div className="bg-gradient-to-r from-green-500 to-emerald-600 rounded-2xl p-8 text-center shadow-2xl mt-6 animate-in fade-in duration-500">
          <h3 className="mb-3 text-white">
            üéâ Gratuluji! Vidƒõli jste √∫spƒõ≈°n√© modely
          </h3>
          <p className="text-green-100 mb-6">
            Inspirovali jste se? M≈Ø≈æete se kdykoliv vr√°tit a prohl√©dnout si modely znovu.
          </p>
          <Button
            onClick={() => {
              setIsCompleted(true);
              onComplete?.();
            }}
            size="lg"
            className="bg-white text-green-700 hover:bg-green-50 font-bold text-lg px-12 py-6 shadow-xl hover:shadow-2xl transition-all hover:scale-105"
          >
            Dokonƒçit Modul 2 üéâ
          </Button>
        </div>
      ) : (
        <div className="bg-green-50 border-2 border-green-300 rounded-2xl p-6 mt-6 animate-in fade-in zoom-in-95 duration-300">
          <div className="flex items-center gap-3 mb-4">
            <div className="bg-green-500 rounded-full p-3">
              <CheckCircle2 className="w-8 h-8 text-white" />
            </div>
            <div className="flex-1">
              <h3 className="text-2xl font-bold text-green-900">
                ‚úÖ Modul 2 dokonƒçen!
              </h3>
              <p className="text-sm text-green-700">
                Skvƒõl√° pr√°ce! Nyn√≠ zaƒçnƒõte s Modulem 3 - Value Proposition Canvas.
              </p>
            </div>
          </div>
          
          <div className="flex gap-3">
            {onNavigateNext && (
              <Button
                onClick={onNavigateNext}
                size="lg"
                className="flex-1 bg-green-600 hover:bg-green-700"
              >
                Pokraƒçovat na Modul 3 ‚Üí
              </Button>
            )}
            <Button
              onClick={() => setIsCompleted(false)}
              variant="outline"
              size="lg"
            >
              üîÑ Prohl√©dnout znovu
            </Button>
          </div>
        </div>
      )}
    </div>
  );
}

// Helper component for canvas sections
function CanvasSection({ 
  title, 
  items, 
  getColorClass, 
  highlight = false,
  highlightColor = 'blue',
  fullHeight = false
}: { 
  title: string; 
  items: any[]; 
  getColorClass: (color: string) => string;
  highlight?: boolean;
  highlightColor?: string;
  fullHeight?: boolean;
}) {
  const ringClass = highlightColor === 'blue' ? 'ring-2 ring-blue-400' : 'ring-2 ring-green-400';
  
  return (
    <div className={`${highlight ? ringClass : ''} bg-gray-50 border-2 border-gray-200 rounded-lg p-3 ${fullHeight ? 'h-full' : ''}`}>
      <h5 className="text-xs font-bold text-gray-700 mb-2">{title}</h5>
      <div className="space-y-1.5">
        {items.map((item, idx) => (
          <div
            key={idx}
            className={`text-xs px-2 py-1.5 rounded border ${getColorClass(item.color || 'white')}`}
          >
            <div className="font-medium leading-snug">{item.text || item}</div>
            {item.price && <div className="text-[10px] opacity-75 mt-0.5">{item.price}</div>}
            {item.percentage && <div className="text-[10px] opacity-75 font-bold mt-0.5">{item.percentage}</div>}
          </div>
        ))}
      </div>
    </div>
  );
}
