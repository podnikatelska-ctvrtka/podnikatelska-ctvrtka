import { CheckCircle2, TrendingUp, DollarSign } from "lucide-react";
import { Button } from "./ui/button";
import { useState } from "react";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "./ui/tabs";

interface Props {
  onComplete?: () => void;
  onNavigateNext?: () => void;
}

const EXAMPLES = [
  {
    category: "‚òï Kav√°rna",
    versions: [
      {
        id: "cafe-a",
        versionLabel: "Workspace",
        emoji: "‚òï",
        title: "Kav√°rna jako workspace",
        segment: "Freelance≈ôi + Studenti",
        tip: "Nab√≠dnƒõte WiFi a velk√Ω prostor se stoly ‚Üí z√°kazn√≠ci z≈Østanou cel√Ω den",
        result: "3x v√≠c tr≈æeb z k√°vy (pr≈Ømƒõr 3 k√°vy za n√°v≈°tƒõvu vs. 1 k√°va)",
        revenue: "K√°va (60%) + J√≠dlo (30%) + Dezerty (10%)",
        keySuccess: "Velk√Ω prostor = dlouh√© n√°v≈°tƒõvy = v√≠c tr≈æeb",
        color: "blue"
      },
      {
        id: "cafe-b",
        versionLabel: "Rychl√° kav√°rna",
        emoji: "‚òï",
        title: "Rychl√° kav√°rna to-go",
        segment: "Rann√≠ doj√≠≈ædƒõj√≠c√≠ + Office workers",
        tip: "Um√≠stƒõn√≠ na ru≈°n√© k≈ôi≈æovatce + mobiln√≠ objedn√°vka",
        result: "200+ k√°v dennƒõ, 80% to-go (vysok√° rotace)",
        revenue: "K√°va to-go (50%) + Express obƒõdy (40%) + Dezerty (10%)",
        keySuccess: "Rychlost + lokace = vysok√Ω objem prodeje",
        color: "blue"
      },
      {
        id: "cafe-c",
        versionLabel: "Drive-thru",
        emoji: "‚òï",
        title: "Drive-thru kav√°rna",
        segment: "Rodiƒçe na ≈°koln√≠ch svozech + Pendle≈ôi",
        tip: "≈Ω√°dn√° ƒçek√°rna = minim√°ln√≠ n√°jem, maxim√°ln√≠ pr≈Øtok aut",
        result: "300+ objedn√°vek dennƒõ, 95% drive-thru (ultra rychl√Ω pr≈Øtok)",
        revenue: "K√°va (55%) + Bakery (35%) + Kids menu (10%)",
        keySuccess: "≈Ω√°dn√° obsluha uvnit≈ô = n√≠zk√© n√°klady, vysok√Ω objem",
        color: "blue"
      },
      {
        id: "cafe-d",
        versionLabel: "Specialty",
        emoji: "‚òï",
        title: "Specialty coffee shop",
        segment: "Coffee geeks + Hipste≈ôi",
        tip: "Micro-batch k√°va z jedin√©ho p≈Øvodu + barista show",
        result: "K√°va za 150-200 Kƒç (2x vy≈°≈°√≠ cena ne≈æ standard)",
        revenue: "Premium k√°va (80%) + Merch (15%) + Workshopy (5%)",
        keySuccess: "Exkluzivita + eduakce = premium ceny bez probl√©m≈Ø",
        color: "blue"
      }
    ]
  },
  {
    category: "üçï Pizzerie",
    versions: [
      {
        id: "pizza-a",
        versionLabel: "S rozvozem",
        emoji: "üçï",
        title: "Pizzerie s rozvozem",
        segment: "Rodiny + Studenti v kolej√≠ch",
        tip: "20% sleva p≈ôi osobn√≠m odbƒõru ‚Üí sn√≠≈æ√≠te n√°klady na rozvoz",
        result: "40% z√°kazn√≠k≈Ø si vybere odbƒõr = vy≈°≈°√≠ mar≈æe",
        revenue: "Pizza (70%) + N√°poje (20%) + P≈ô√≠lohy (10%)",
        keySuccess: "Sleva na odbƒõr = v√≠c objedn√°vek s vy≈°≈°√≠ mar≈æ√≠",
        color: "pink"
      },
      {
        id: "pizza-b",
        versionLabel: "R≈Øzn√° a rozmanit√°",
        emoji: "üçï",
        title: "Pr√©miov√° ≈ôemesln√° pizza",
        segment: "Foodie + Mlad√≠ profesion√°lov√©",
        tip: "Specialty ingredience + limitovan√© edice ‚Üí vy≈°≈°√≠ cena",
        result: "50% vy≈°≈°√≠ pr≈Ømƒõrn√° cena pizzy (350 Kƒç vs 230 Kƒç)",
        revenue: "Pizza (60%) + Craft pivo (25%) + Dezerty (15%)",
        keySuccess: "Pr√©miov√© ingredience = vy≈°≈°√≠ mar≈æe + loajalita",
        color: "pink"
      }
    ]
  },
  {
    category: "üèãÔ∏è Fitness",
    versions: [
      {
        id: "fitness-a",
        versionLabel: "PT focus",
        emoji: "üèãÔ∏è",
        title: "Fitness centrum s PT",
        segment: "Zaƒç√°teƒçn√≠ci + Pokroƒçil√≠",
        tip: "Personal training jako premium produkt ‚Üí 10x vy≈°≈°√≠ cena ne≈æ bƒõ≈æn√© ƒçlenstv√≠",
        result: "Jen 20% ƒçlen≈Ø bere PT, ale generuje 50% zisku",
        revenue: "ƒålenstv√≠ (50%) + PT (40%) + Smoothie bar (10%)",
        keySuccess: "Premium slu≈æby = men≈°√≠ objem, vy≈°≈°√≠ mar≈æe",
        color: "green"
      },
      {
        id: "fitness-b",
        versionLabel: "24/7 Low-cost",
        emoji: "üèãÔ∏è",
        title: "24/7 Samoobslu≈æn√© fitness",
        segment: "Cenovƒõ citliv√≠ + Flexibiln√≠ pracovn√≠ doba",
        tip: "Automatizace + nonstop provoz ‚Üí n√≠zk√© n√°klady na mzdy",
        result: "3x v√≠ce ƒçlen≈Ø, 70% ni≈æ≈°√≠ n√°klady na provoz",
        revenue: "ƒålenstv√≠ Basic (70%) + Premium (20%) + Dopl≈àky (10%)",
        keySuccess: "Automatizace = ≈°k√°lovatelnost bez r≈Østu n√°klad≈Ø",
        color: "green"
      }
    ]
  }
];

export function SimpleBusinessExamples({ onComplete, onNavigateNext }: Props) {
  const [selectedExample, setSelectedExample] = useState<string | null>(null);
  const [isCompleted, setIsCompleted] = useState(false);

  const handleComplete = () => {
    setIsCompleted(true);
    if (onComplete) {
      onComplete();
    }
  };

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="bg-gradient-to-r from-purple-50 to-blue-50 border-2 border-purple-200 rounded-xl p-4 sm:p-6">
        <h2 className="text-xl sm:text-2xl font-bold text-purple-900 mb-2">
          üí° P≈ô√≠klady √∫spƒõ≈°n√Ωch model≈Ø
        </h2>
        <p className="text-sm sm:text-base text-purple-700">
          Jak ostatn√≠ podnikatel√© pou≈æ√≠vaj√≠ Model podnik√°n√≠ pro r≈Øst byznysu
        </p>
      </div>

      {/* Tip Box */}
      <div className="bg-blue-50 border-l-4 border-blue-500 p-3 sm:p-4 rounded">
        <p className="text-xs sm:text-sm text-blue-900">
          <strong>üéØ V√°≈° √∫kol:</strong> Projdƒõte si p≈ô√≠klady a porovnejte R≈ÆZN√â strategie pro stejn√Ω byznys. 
          Ka≈æd√Ω model funguje jinak!
        </p>
      </div>

      {/* Examples with Tabs */}
      <div className="space-y-6">
        {EXAMPLES.map((category) => (
          <div key={category.category} className="bg-white border-2 border-gray-200 rounded-xl overflow-hidden">
            {/* Category Header */}
            <div className="bg-gradient-to-r from-gray-50 to-gray-100 border-b-2 border-gray-200 p-4">
              <h3 className="font-bold text-gray-900 text-base sm:text-lg">
                {category.category}
              </h3>
              <p className="text-xs text-gray-600 mt-1">
                Porovnejte 2 r≈Øzn√© strategie ‚Üí
              </p>
            </div>

            {/* Tabs for versions - Adaptivn√≠ pro 2-3 nebo 4+ verz√≠ */}
            <div className="p-4">
              <Tabs defaultValue={category.versions[0].id}>
                {/* üí° SMART LAYOUT: 2-3 verze = grid, 4+ verze = horizontal scroll */}
                <div 
                  className={category.versions.length <= 3 ? "" : "overflow-x-auto pb-2 -mx-4 px-4"}
                  style={category.versions.length > 3 ? { touchAction: 'pan-x' } : undefined}
                  onTouchStart={(e) => {
                    // STOP propagace swipe gesta - aby SwipeLessonNavigation nep≈ôepnula lekci!
                    if (category.versions.length > 3) {
                      e.stopPropagation();
                    }
                  }}
                  onTouchMove={(e) => {
                    if (category.versions.length > 3) {
                      e.stopPropagation();
                    }
                  }}
                >
                  <TabsList className={`bg-gray-100 rounded-lg mb-4 ${
                    category.versions.length === 2 
                      ? "grid w-full grid-cols-2 p-1 sm:p-1.5" 
                      : category.versions.length === 3
                      ? "grid w-full grid-cols-3 p-1 sm:p-1.5"
                      : "inline-flex w-auto p-0.5 sm:p-1"
                  }`}>
                    {category.versions.map((version) => (
                      <TabsTrigger
                        key={version.id}
                        value={version.id}
                        className="!gap-1 sm:!gap-2 data-[state=active]:bg-blue-500 data-[state=active]:text-white font-bold !text-xs sm:!text-sm !py-2 sm:!py-3 !px-2 sm:!px-4 whitespace-nowrap"
                      >
                        {version.versionLabel}
                      </TabsTrigger>
                    ))}
                  </TabsList>
                </div>

                {category.versions.map((example) => (
                  <TabsContent key={example.id} value={example.id} className="space-y-3">
                    {/* Example Card Content */}
                    <div
                      onClick={() => setSelectedExample(selectedExample === example.id ? null : example.id)}
                      className={`border-2 rounded-lg p-3 sm:p-4 cursor-pointer transition-all ${
                        selectedExample === example.id 
                          ? 'border-purple-400 shadow-lg' 
                          : 'border-gray-200 hover:border-purple-300'
                      }`}
                    >
                      {/* Header */}
                      <div className="flex items-center gap-2 sm:gap-3 mb-2 sm:mb-3">
                        <div className={category.versions.length > 3 ? "text-2xl sm:text-3xl" : "text-3xl sm:text-4xl"}>{example.emoji}</div>
                        <div className="flex-1">
                          <h4 className="font-bold text-gray-900 text-sm sm:text-base">{example.title}</h4>
                          <p className="text-xs text-gray-600">{example.segment}</p>
                        </div>
                      </div>

                      {/* Quick Tip */}
                      <div className={`bg-blue-50 border border-blue-200 rounded-lg mb-2 ${
                        category.versions.length > 3 ? "p-2" : "p-2 sm:p-3"
                      }`}>
                        <p className="text-xs sm:text-sm text-blue-900">
                          <strong>üí° Kl√≠ƒçov√Ω tip:</strong> {example.tip}
                        </p>
                      </div>

                      {/* Result */}
                      <div className={`bg-green-50 border border-green-200 rounded-lg mb-2 sm:mb-3 ${
                        category.versions.length > 3 ? "p-2" : "p-2 sm:p-3"
                      }`}>
                        <p className="text-xs sm:text-sm text-green-900">
                          <strong>üìà V√Ωsledek:</strong> {example.result}
                        </p>
                      </div>

                      {/* Detail (collapsible) */}
                      {selectedExample === example.id && (
                        <div className="space-y-2 mt-3 pt-3 border-t border-gray-200 animate-in fade-in slide-in-from-top-2 duration-300">
                          <div className="text-xs sm:text-sm">
                            <strong className="text-gray-700">üí∞ Zdroje p≈ô√≠jm≈Ø:</strong>
                            <p className="text-gray-600 mt-1">{example.revenue}</p>
                          </div>
                          <div className="text-xs sm:text-sm">
                            <strong className="text-gray-700">üîë Proƒç to funguje:</strong>
                            <p className="text-gray-600 mt-1">{example.keySuccess}</p>
                          </div>
                        </div>
                      )}

                      {/* Expand hint */}
                      {selectedExample !== example.id && (
                        <p className="text-center text-xs text-gray-400 mt-2">
                          Klikni pro detail ‚Üí
                        </p>
                      )}
                    </div>
                  </TabsContent>
                ))}
              </Tabs>
            </div>
          </div>
        ))}
      </div>

      {/* Key Insights */}
      <div className="bg-gradient-to-br from-orange-50 to-yellow-50 border-2 border-orange-300 rounded-xl p-4 sm:p-6">
        <h3 className="font-bold text-orange-900 mb-3 flex items-center gap-2 text-base sm:text-lg">
          <TrendingUp className="w-5 h-5" />
          üéØ Co maj√≠ spoleƒçn√©ho?
        </h3>
        
        <div className="space-y-2 sm:space-y-3">
          <div className="flex gap-2 sm:gap-3 items-start">
            <CheckCircle2 className="w-4 h-4 sm:w-5 sm:h-5 text-green-600 flex-shrink-0 mt-0.5" />
            <div className="text-xs sm:text-sm">
              <strong className="text-gray-900">Segmentace:</strong>
              <span className="text-gray-700"> Ka≈æd√Ω zn√° P≈òESNƒö sv√© z√°kazn√≠ky</span>
            </div>
          </div>
          
          <div className="flex gap-2 sm:gap-3 items-start">
            <CheckCircle2 className="w-4 h-4 sm:w-5 sm:h-5 text-green-600 flex-shrink-0 mt-0.5" />
            <div className="text-xs sm:text-sm">
              <strong className="text-gray-900">R≈Øzn√© strategie:</strong>
              <span className="text-gray-700"> Stejn√Ω byznys lze udƒõlat 10 r≈Øzn√Ωmi zp≈Øsoby!</span>
            </div>
          </div>
          
          <div className="flex gap-2 sm:gap-3 items-start">
            <CheckCircle2 className="w-4 h-4 sm:w-5 sm:h-5 text-green-600 flex-shrink-0 mt-0.5" />
            <div className="text-xs sm:text-sm">
              <strong className="text-gray-900">Optimalizace n√°klad≈Ø:</strong>
              <span className="text-gray-700"> Hledaj√≠ zp≈Øsoby jak sn√≠≈æit n√°klady (automatizace, odbƒõr vs. rozvoz)</span>
            </div>
          </div>
          
          <div className="flex gap-2 sm:gap-3 items-start">
            <CheckCircle2 className="w-4 h-4 sm:w-5 sm:h-5 text-green-600 flex-shrink-0 mt-0.5" />
            <div className="text-xs sm:text-sm">
              <strong className="text-gray-900">V√≠c zdroj≈Ø p≈ô√≠jm≈Ø:</strong>
              <span className="text-gray-700"> Neprod√°vaj√≠ jen 1 vƒõc (k√°va + j√≠dlo + dezerty)</span>
            </div>
          </div>
        </div>
      </div>

      {/* Action Box */}
      <div className="bg-purple-50 border-2 border-purple-300 rounded-xl p-4 sm:p-6">
        <h3 className="font-bold text-purple-900 mb-2 text-base sm:text-lg">
          ‚úÖ Jak to aplikovat ve va≈°em byznysu?
        </h3>
        <div className="space-y-2 text-xs sm:text-sm text-purple-800">
          <p>
            <strong>1. Inspirace:</strong> Zkuste promyslet 2 R≈ÆZN√â strategie pro v√°≈° byznys
          </p>
          <p>
            <strong>2. Premium vs Low-cost:</strong> M≈Ø≈æete j√≠t cestou kvality NEBO objemu
          </p>
          <p>
            <strong>3. V√≠ce zdroj≈Ø:</strong> P≈ôidejte komplement√°rn√≠ produkty/slu≈æby
          </p>
          <p>
            <strong>4. Testov√°n√≠:</strong> Vyzkou≈°ejte obƒõ strategie a zjistƒõte co funguje l√©pe
          </p>
        </div>
      </div>

      {/* Completion */}
      {!isCompleted ? (
        <div className="flex justify-center">
          <Button
            onClick={handleComplete}
            size="lg"
            className="w-full sm:w-auto bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700"
          >
            <span className="hidden sm:inline">‚úÖ Hotovo - pokraƒçovat d√°l</span>
            <span className="sm:hidden">‚úÖ Hotovo</span>
          </Button>
        </div>
      ) : (
        <div className="bg-gradient-to-br from-green-500 via-emerald-500 to-teal-500 rounded-2xl p-6 sm:p-8 text-white shadow-xl">
          <div className="flex items-start gap-4 mb-4 sm:mb-6">
            <div className="bg-white/20 backdrop-blur-sm rounded-full p-3">
              <CheckCircle2 className="w-6 h-6 sm:w-8 sm:h-8 text-white" />
            </div>
            <div className="flex-1">
              <h4 className="text-lg sm:text-2xl font-bold mb-2">
                ‚úÖ Lekce dokonƒçena!
              </h4>
              <p className="text-green-50 text-sm sm:text-lg">
                Skvƒõl√° pr√°ce! Prozkoumali jste p≈ô√≠klady √∫spƒõ≈°n√Ωch model≈Ø.
              </p>
            </div>
          </div>
          
          <div className="flex flex-col sm:flex-row gap-3">
            <Button
              onClick={() => setIsCompleted(false)}
              variant="outline"
              size="lg"
              className="flex-1 bg-white/10 backdrop-blur-sm text-white border-white/30 hover:bg-white/20 text-sm sm:text-base"
            >
              üîÑ Zkusit znovu
            </Button>
            {onNavigateNext && (
              <Button
                onClick={onNavigateNext}
                size="lg"
                className="flex-1 bg-white text-green-600 hover:bg-green-50 text-sm sm:text-base"
              >
                <span className="hidden sm:inline">Pokraƒçovat na dal≈°√≠ lekci ‚Üí</span>
                <span className="sm:hidden">Dal≈°√≠ ‚Üí</span>
              </Button>
            )}
          </div>
        </div>
      )}
    </div>
  );
}
